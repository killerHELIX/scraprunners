@using Sandbox;
@using Sandbox.UI;
@using System;
@inherits PanelComponent
@namespace Sandbox


<root>
	@* <div class="ref"></div> *@
	<div class="health">
		@* <div class="max-health"/>
		<div class="current-health"/> *@
		<div class="max-health">
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
		</div>
		<div class="current-health" style="width: @GetCurrentHealth()">
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
		</div>
		<div class="damage" style="width: @GetCurrentHealth()">
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
			<div class="pill"/>
		</div>
	</div>
	<div class="weapons"></div>
	<div class="speed">Speed: @GetCurrentSpeed() MPH</div>
	<div class="turn">
		<span class="point" style="left: 50%" />
		<span class="point" style="left: @GetTurnDirection()" />
	</div>
</root>

@code
{

	[Property] public scraprunners.TruckController TruckController;
	[Property] public float SpeedFactor { get; set; } = 1.0f;

	protected string GetCurrentSpeed()
	{
		return $"{(Math.Abs(TruckController.CurrentSpeed) * SpeedFactor):F0}";

	}
	protected string GetTurnDirection()
	{
		float percentage = -1 * (TruckController.TurnDirection / TruckController.TurnSpeed);
		float start = 50f; // initial left: value
		float max = 40f; // maximum addition to left: value in either direction
		return $"{start + max * percentage}%";
	}

	protected string GetCurrentHealth()
	{
		var percentage = TruckController.Health / TruckController.MaxHealth;
		float start = 0f;
		float max = 100f;
		return $"{start + max * percentage}%";
	}

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash()
	{
		return System.HashCode.Combine($"{TruckController.CurrentSpeed} {TruckController.TurnDirection} {TruckController.MaxHealth} {TruckController.Health}");
	}
}